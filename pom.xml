<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.framecloud</groupId>
    <artifactId>framecloud-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>


    <modules>
        <module>framecloud-common</module>
        <module>framecloud-auth</module>
        <module>framecloud-gateway</module>
        <module>framecloud-user</module>
        <module>framecloud-log</module>
        <module>framecloud-transaction</module>
        <module>framecloud-starter</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <springloaded.version>1.2.6.RELEASE</springloaded.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <velocity.version>1.7</velocity.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-io.version>2.5</commons-io.version>
        <commons-configuration.version>1.10</commons-configuration.version>
        <spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>
        <guava-version>20.0</guava-version>
        <jjwt-version>0.9.0</jjwt-version>
        <mybatis-plus-starter.version>3.0.1</mybatis-plus-starter.version>
        <mysql-connector.version>5.1.46</mysql-connector.version>
        <swagger.version>2.9.2</swagger.version>
        <gson.version>2.8.2</gson.version>
        <spring.cloud.oauth2.version>2.3.3.RELEASE</spring.cloud.oauth2.version>
        <spring-cloud-alibaba.version>0.9.0.RELEASE</spring-cloud-alibaba.version>
        <qcloudsms.version>1.0.5</qcloudsms.version>
        <futool.version>4.4.1</futool.version>
        <org.mapstruct.version>1.1.0.Final</org.mapstruct.version>
        <lombok>1.18.6</lombok>
        <spring-cloud-sleuth-stream>1.3.3.RELEASE</spring-cloud-sleuth-stream>
        <zipkin-autoconfigure-ui>2.12.5</zipkin-autoconfigure-ui>
        <zipkin-server>2.12.5</zipkin-server>
        <spring-cloud-sleuth-zipkin-stream>1.3.6.RELEASE</spring-cloud-sleuth-zipkin-stream>
        <docker.serverId>docker-framecloud-aliyun</docker.serverId>
        <docker.registry.name>tnaot-test</docker.registry.name>
        <docker.repostory>registry-intl.cn-hongkong.aliyuncs.com</docker.repostory>
    </properties>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--Spring cloud alibaba-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- MyBatisPlus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${org.mapstruct.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-pay</artifactId>
                <version>3.2.0</version>
            </dependency>
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-miniapp</artifactId>
                <version>3.2.0</version>
            </dependency>
            <!-- http://www.hutool.cn/ -->
            <dependency>
                <groupId>com.xiaoleilu</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${futool.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-sleuth-stream</artifactId>
                <version>${spring-cloud-sleuth-stream}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-autoconfigure-ui</artifactId>
                <version>${zipkin-autoconfigure-ui}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-server</artifactId>
                <version>${zipkin-server}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-sleuth-zipkin-stream</artifactId>
                <version>${spring-cloud-sleuth-zipkin-stream}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>springloaded</artifactId>
                        <version>${springloaded.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/classes</outputDirectory>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <delimiters>
                                <delimiter>#</delimiter>
                            </delimiters>
                            <resources>
                                <!--将resources下的lib的jar打入BOOT-INF/lib包中 -->
                                <resource>
                                    <directory>src/main/resources/lib</directory>
                                    <targetPath>BOOT-INF/lib/</targetPath>
                                    <includes>
                                        <include>**/*.jar</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>src/main/resources/</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- k8s打包要用配置 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.1.1</version>
                <configuration>
                    <baseImage>openjdk:8u181-jre</baseImage>
                    <forceTags>true</forceTags>
                    <workdir>/app</workdir>
                    <runs>
                        <run><![CDATA[ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo 'Asia/Shanghai' >/etc/timezone]]></run>
                        <run><![CDATA[mv /app/${project.build.finalName}.jar /app/app.jar]]></run>
                    </runs>
                    <!-- <entryPoint>["java", "-jar", "${project.build.finalName}.jar"]</entryPoint> -->
                    <!-- <dockerDirectory>${basedir}/src/main/docker</dockerDirectory> -->
                    <!-- 私有仓库配置，需要settings.xml文件配合serverId对应的服务地址 -->
                    <!-- <serverId>${docker.serverId}</serverId> -->
                    <serverId>${docker.serverId}</serverId>
                    <registryUrl>${docker.repostory}</registryUrl>
                    <!--install阶段也上传，否则只有deploy阶段上传 -->
                    <pushImage>true</pushImage>
                    <imageName>
                        ${docker.repostory}/${docker.registry.name}/${project.artifactId}:${maven.build.timestamp}
                    </imageName>
                    <imageTags>
                        <!--docker的tag为项目版本号、latest -->
                        <imageTag>${maven.build.timestamp}</imageTag>
                        <imageTag>latest</imageTag>
                    </imageTags>
                    <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
                    <resources>
                        <resource>
                            <targetPath>/app</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>



</project>
